(this.webpackJsonpportfolio=this.webpackJsonpportfolio||[]).push([[0],{54:function(e,t,a){},56:function(e,t,a){},65:function(e,t,a){},66:function(e,t,a){},68:function(e,t,a){},69:function(e,t,a){},70:function(e,t,a){"use strict";a.r(t);var n=a(0),s=a.n(n),i=a(8),c=a.n(i),r=a.p+"static/media/profile.0a1c53a6.png",o=(a(54),a(2)),l=function(){return Object(o.jsx)(o.Fragment,{children:Object(o.jsx)("div",{className:"Profile",children:Object(o.jsx)("div",{className:"Profile-Circle",children:Object(o.jsx)("img",{className:"Profile-Image",src:r,alt:"Profile"})})})})},j=a(21),b=a(93),d=a(96),h=a(97),u=a(102),m=a(98),p=a(100),f=a(42),x=a.n(f),O=a(99),g=(a.p,a.p+"static/media/grabaphone.fa12f8cb.png"),k=(a.p,[{title:"Fantasy Football Trade Tips",description:"Fantasy Trade Tips is a full stack web application that allows fantasy football players to view stats, get trade suggestions, and simulate trades to view the impact on their new team. It's written in Python, and uses Flask, SQLAlchemy, & WTForms on the backend. It's currently hosted on Heroku, so it may take a moment to spin up."},{title:"Grabaphone API",description:"Grabaphone is a RESTful API that can be used to retrieve data on over 5000 cellular devices. It's written in Python, and uses Flask & SQLAlchemy on the backend. It's currently hosted on Heroku, so it may take a moment to spin up.",image:g},{title:"Yeti",description:"Yeti is a full stack web application, and a mobile app that empowers users to engage with their community. It uses Express on the backend, and React/React Native on the frontend for the web and mobile apps, respectively."},{title:"TicketMaster",description:"TicketMaster is a full stack web application that allows users to create and manage workspaces & projects. Admins of a workspace can generate, assign, and set priority on projects and tickets, while regular users in a workspace can view, edit, and complete tickets."}]),v=[{label:"About",href:"#about"},{label:"Contact",href:"#contact"},{label:"Projects",href:"#projects"},{label:"Github",href:"https://github.com/leshawn-rice",target:"_blank"},{label:"LinkedIn",href:"https://linkedin.in/in/leshawn-rice",target:"_blank"}],w=(a(56),function(){var e=Object(n.useState)(!1),t=Object(j.a)(e,2),a=t[0],s=t[1],i=Object(n.useState)(!1),c=Object(j.a)(i,2),r=c[0],l=c[1];Object(n.useEffect)((function(){var e=function(){return window.innerWidth<900?s(!0):s(!1)};e(),window.addEventListener("resize",(function(){return e()}))}),[]);var f=Object(O.a)();return Object(o.jsx)(m.a,{in:!f,children:Object(o.jsx)(p.a,{position:"fixed",className:"Navbar",children:a?function(){var e=function(){l(!1)};return Object(o.jsxs)(d.a,{children:[Object(o.jsx)(h.a,{edge:"start",color:"inherit","aria-label":"menu","aria-haspopup":"true",onClick:function(){l(!0)},children:Object(o.jsx)(x.a,{className:"Navbar-Mobile-Menu"})}),Object(o.jsx)(u.a,{anchor:"left",open:r,onClose:e,children:Object(o.jsx)("div",{className:"Navbar-Mobile-Drawer Mobile-Navbar-Items",children:v.map((function(t){return Object(o.jsx)(b.a,{onClick:e,href:t.href,target:t.target,children:t.label},t.label)}))})}),Object(o.jsx)("div",{className:"Navbar-Logo-Mobile",children:Object(o.jsx)(b.a,{className:"Navbar-Logo-Mobile",href:"#",children:"Leshawn Rice"})})]})}():Object(o.jsx)(o.Fragment,{children:Object(o.jsxs)(d.a,{children:[Object(o.jsx)("div",{className:"Navbar-Logo",children:Object(o.jsx)(b.a,{href:"#",children:"Leshawn Rice"})}),Object(o.jsx)("div",{className:"Navbar-Items",children:v.map((function(e){return Object(o.jsx)(b.a,{href:e.href,target:e.target,children:e.label},e.label)}))})]})})})})}),y=a(101),N=(a(65),function(e){var t=e.project,a=t.title,n=t.image,s=t.description;return Object(o.jsxs)("div",{className:"Project",id:a,children:[Object(o.jsxs)("div",{className:"Project-Title",children:[Object(o.jsx)("button",{className:"Project-Title-Button",children:"View Code"}),Object(o.jsx)(y.a,{variant:"h5",gutterBottom:!0,children:a}),Object(o.jsx)("button",{className:"Project-Title-Button",children:"View Project"})]}),Object(o.jsxs)("div",{className:"Project-Body",children:[Object(o.jsx)("div",{className:"Project-Body-Image",children:Object(o.jsx)("img",{className:"Project-Body-Img",src:n,alt:"".concat(a," preview")})}),Object(o.jsx)("div",{className:"Project-Body-Text",children:Object(o.jsx)(y.a,{variant:"body1",gutterBottom:!0,children:s})})]})]})}),P=(a(66),function(){return Object(o.jsxs)("div",{className:"Projects",id:"projects",children:[Object(o.jsx)(y.a,{variant:"h1",gutterBottom:!0,className:"Projects-Heading",children:"Projects"}),k.map((function(e,t){return Object(o.jsx)(N,{project:e},t)}))]})}),I=(a(67),a(68),a(69),function(){return Object(o.jsxs)("div",{className:"About",id:"about",children:[Object(o.jsx)(y.a,{variant:"h1",className:"About-Heading",children:"About"}),Object(o.jsx)("div",{className:"About-Body",children:Object(o.jsxs)(y.a,{variant:"h5",component:"p",children:["Hello! My name is Leshawn Rice, and I'm a Software Developer from the Greater Seattle area. I primarily use ",Object(o.jsx)("strong",{children:"Javascript"})," and ",Object(o.jsx)("strong",{children:"Python"})," but picking up a new framework or language isn't a problem for me. I'm comfortable developing on the frontend and the backend, and I enjoy challenging myself to make seamless, efficient, and scalable applications.",Object(o.jsx)("br",{}),Object(o.jsx)("br",{}),Object(o.jsx)(y.a,{variant:"h4",component:"span",children:"Backend"}),Object(o.jsx)("br",{}),"My bread and butter is ",Object(o.jsx)("strong",{children:"Express"}),". When working with a backend in Javascript, the stack I'm most familiar with is PostgreSQL, Express, and Node.js, but like I said picking up a new framework or language isn't a problem for me, so I can quickly adapt to a MEAN stack without much difficulty.",Object(o.jsx)("br",{}),Object(o.jsx)("a",{className:"project-link",href:"#TicketMaster",children:"Yeti"})," runs off of a backend built with Express.",Object(o.jsx)("br",{}),Object(o.jsx)("br",{}),"When working in a Python backend, the framework I'm most familiar with is ",Object(o.jsx)("strong",{children:"Flask"}),". While Flask is easy to work with and provides a lot of flexibiliy, I've been getting more into using ",Object(o.jsx)("strong",{children:"Django"})," since they added asynchronous support.",Object(o.jsx)("br",{}),Object(o.jsx)("a",{className:"project-link",href:"#Fantasy Football Trade Tips",children:"Fantasy Football Trade Tips"})," runs off of a backend built with Flask."]})})]})}),T=function(){return Object(o.jsxs)("div",{className:"container",children:[Object(o.jsx)(w,{}),Object(o.jsx)(l,{}),Object(o.jsx)(I,{}),Object(o.jsx)(P,{})]})};c.a.render(Object(o.jsx)(s.a.StrictMode,{children:Object(o.jsx)(T,{})}),document.getElementById("root"))}},[[70,1,2]]]);
//# sourceMappingURL=main.5728fe5c.chunk.js.map