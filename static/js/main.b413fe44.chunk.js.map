{"version":3,"sources":["img/grabaphone.png","config.js","components/Navbar.js","components/Project.js","components/Projects.js","components/Footer.js","img/profile.png","components/About.js","components/App.js","index.js"],"names":["PROJECTS","title","description","image","grabaphone_img","url","github","HEADERS_DATA","label","href","target","Navbar","useState","isOpen","setOpen","className","id","map","link","toggled","toggle","Project","project","handleLink","data-url","onClick","src","alt","Projects","Footer","About","profilePhoto","window","open","App","evt","dataset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b413fe44.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/grabaphone.fa12f8cb.png\";","import grabaphone_img from './img/grabaphone.png';\n\nconst PROJECTS = {\n  'FFL': {\n    title: 'Fantasy Football Trade Tips',\n    description: `Fantasy Trade Tips is a full stack web application that allows fantasy football players to view stats, get trade suggestions, and simulate trades to view the impact on their new team. It's written in Python, and uses Flask, SQLAlchemy, & WTForms on the backend. It's currently hosted on Heroku, so it may take a moment to spin up.`,\n  },\n  'GBP': {\n    title: 'Grabaphone API',\n    description: `Grabaphone is a RESTful API that can be used to retrieve data on over 5000 cellular devices. It's written in Python, and uses Flask & SQLAlchemy on the backend. It's currently hosted on Heroku, so it may take a moment to spin up.`,\n    image: grabaphone_img\n  },\n  'YTI': {\n    title: 'Yeti',\n    description: 'Yeti is a full stack web application, and a mobile app that empowers users to engage with their community. It uses Express on the backend, and React/React Native on the frontend for the web and mobile apps, respectively.',\n    image: grabaphone_img,\n    url: 'https://goyeti.surge.sh',\n    github: 'https://github.com/leshawn-rice/yeti'\n  },\n  'TKT': {\n    title: 'TicketMaster',\n    description: 'TicketMaster is a full stack web application that allows users to create and manage workspaces & projects. Admins of a workspace can generate, assign, and set priority on projects and tickets, while regular users in a workspace can view, edit, and complete tickets.'\n  }\n}\n\nconst HEADERS_DATA = [\n  {\n    label: 'About',\n    href: '#about',\n  },\n  {\n    label: 'Contact',\n    href: '#contact',\n  },\n  {\n    label: 'Projects',\n    href: '#projects',\n  },\n  {\n    label: 'Github',\n    href: 'https://github.com/leshawn-rice',\n    target: '_blank'\n  },\n  {\n    label: 'LinkedIn',\n    href: 'https://linkedin.in/in/leshawn-rice',\n    target: '_blank'\n  }\n];\n\nexport { PROJECTS, HEADERS_DATA }","import React, { useState } from 'react';\nimport { Squash as Hamburger } from 'hamburger-react'\nimport { HEADERS_DATA } from '../config';\nimport '../styles/Navbar.css';\n\nconst Navbar = () => {\n  const [isOpen, setOpen] = useState(false);\n\n  const toggleDrawer = () => {\n    if (isOpen) {\n      setOpen(false);\n    }\n    else {\n      setOpen(true);\n    }\n  }\n\n  return (\n    <div className=\"Navbar\" id=\"navbar\">\n      <div className=\"Navbar-Name\">\n        Leshawn Rice\n      </div>\n      <div className='Navbar-Hamburger'>\n        {isOpen ? (\n          <div className=\"Navbar-Links\" id=\"navbar-links\">\n            {HEADERS_DATA.map(link => (\n              <a key={`${link.label}-navlink`} href={link.href} target={link.target} className=\"Navbar-Link\">{link.label}</a>\n            ))}\n          </div>\n        ) : null}\n        <Hamburger toggled={isOpen} toggle={toggleDrawer} />\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar;","import '../styles/Project.css';\n\nconst Project = ({ project, handleLink }) => {\n  const { title, image, description, url, github } = project;\n  return (\n    <div className=\"Project\">\n      <div className=\"Project-Info\">\n        <h1 className=\"Project-Header\">{title}</h1>\n        <p className=\"Project-Description\">{description}</p>\n        <div className=\"Project-Footer\">\n          <button data-url={url} onClick={handleLink} className=\"Project-Btn Project-Link\">View Project</button>\n          <button data-url={github} onClick={handleLink} className=\"Project-Btn Project-Source\">View Code</button>\n        </div>\n      </div>\n      <div className=\"Project-Image\">\n        <img src={image} alt={title} />\n      </div>\n    </div>\n  )\n}\n\nexport default Project;","import Project from './Project';\nimport { PROJECTS } from '../config';\nimport '../styles/Projects.css'\n\n\nconst Projects = ({ handleLink }) => {\n  return (\n    <div className=\"Projects\" id=\"projects\">\n      <div className=\"Projects-Seperator\"></div>\n      <h1 className=\"Projects-Header\">My Projects</h1>\n\n      <div className=\"Projects-Blurb\">\n        <p className=\"Projects-Text\">My bread and butter is Express. When working in a backend in Javascript, the stack I'm most familiar with is PostgreSQL, Express, and Node.js, but like I said picking up a new language or framework isn't a problem for me. I can quickly adapt to a different stack as necessary. My most recent project, <span onClick={handleLink} className=\"Projects-Link\" data-url=\"https://goyeti.surge.sh\">Yeti,</span> was built with a PERN stack.</p>\n      </div>\n\n      <div className=\"Projects-Content\">\n        <Project project={PROJECTS['YTI']} handleLink={handleLink} />\n      </div>\n    </div>\n  )\n}\n\nexport default Projects;","import React from 'react';\n\nimport '../styles/Footer.css';\n\nconst Footer = ({ handleLink }) => {\n  return (\n    <div className=\"Footer\">\n      <h1>Leshawn Rice</h1>\n      <h1><span onClick={handleLink} data-url=\"https://github.com/leshawn-rice\" className=\"Footer-Link\">Github</span> | <span onClick={handleLink} data-url=\"https://linkedin.com/in/leshawn-rice\" className=\"Footer-Link\">LinkedIn</span></h1>\n    </div>\n  )\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/profile.f479b1d8.png\";","import React from 'react';\nimport profilePhoto from '../img/profile.png';\nimport '../styles/About.css'\n\nconst About = ({ handleLink }) => {\n\n  const handleContact = () => {\n    window.open('mailto:leshawn.rice@outlook.com?subject=From your site');\n  }\n\n  return (\n    <div className=\"About\" id=\"about\">\n      <img src={profilePhoto} className=\"About-Photo\" alt=\"profile\" />\n      <div className=\"About-Content\">\n        <h1 className=\"About-Header\">About Me</h1>\n        <p className=\"About-Body\">Hello! My name is Leshawn Rice, and I'm a Software Developer from the Greater Seattle Area. I primarily use Javascript and Python but picking up a new language or framework isn't a problem for me. I'm comfortable developing on the frontend and the backend, and I enjoy challenging myself to make seamless, efficient, and scalable applications.</p>\n        <div className=\"About-Footer\">\n          <button className=\"About-Contact\" onClick={handleContact}>Get in touch</button>\n          <p className=\"About-Social\"><span onClick={handleLink} className=\"About-Link\" data-url=\"https://github.com/leshawn-rice\">GitHub</span> <span className=\"About-Seperator\"> |</span> <span onClick={handleLink} className=\"About-Link\" data-url=\"https://linkedin.com/in/leshawn-rice\">LinkedIn</span></p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default About;","import Navbar from './Navbar';\nimport Projects from './Projects';\nimport Footer from './Footer';\nimport '../styles/App.css';\nimport About from './About';\n\nconst App = () => {\n\n  const handleLink = (evt) => {\n    const target = evt.target;\n    const url = target.dataset.url;\n    window.open(url, '_blank');\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container\">\n        <About handleLink={handleLink} />\n        <Projects handleLink={handleLink} />\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}